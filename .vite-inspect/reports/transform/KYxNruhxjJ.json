{"resolvedId":"/Users/zxdz/Documents/webgl/vite-three/exapmle/list/3.物体移动.ts","transforms":[{"name":"__load__","result":"import * as THREE from 'three'\n\nimport addStats from '../../utils/stats'\nlet width: number = 0, height: number = 0;\nlet renderer: THREE.WebGLRenderer;\n\nconst initThree = (): void => {\n  width = document.getElementById('canvas-frame')?.clientWidth || 0;\n  height = document.getElementById('canvas-frame')?.clientHeight || 0;\n  renderer = new THREE.WebGLRenderer({\n    // 开启抗锯齿\n    antialias: true,\n  })\n  renderer.setSize(width, height);\n  document.getElementById('canvas-frame')?.appendChild(renderer.domElement);\n  renderer.setClearColor(0xFFFFFF, 1);\n}\n\nlet camera: THREE.PerspectiveCamera;\nconst initCamera = () => {\n  camera = new THREE.PerspectiveCamera(60, width / height, 1, 10000);\n  camera.position.x = 0;\n  camera.position.y = 0;\n  camera.position.z = 10;\n  // camera.up.x = 0;\n  // camera.up.y = 1;\n  // camera.up.z = 0;\n  // camera.lookAt({\n  //   x: 0,\n  //   y: 0,\n  //   z: 0,\n  // }) \n}\nlet scene: THREE.Scene;\nconst initScene = () => {\n  scene = new THREE.Scene();\n}\n// 创建物体\nlet cube: THREE.Mesh;\nconst initObject = () => {\n  const geometry = new THREE.BoxGeometry( 1, 1, 1 );\n  // 材质\n  const material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );\n  cube = new THREE.Mesh( geometry, material );\n  scene.add(cube);\n}\n// 循环渲染\nconst animation = () => {\n\n  // 移动相机的位置\n  // camera.position.x += 0.1;\n\n  // 移动物体的位置\n  // cube.position.x -= 0.01;\n\n  cube.rotation.z -= 0.01;\n  renderer.render(scene, camera);\n  requestAnimationFrame(animation)\n}\n\nconst initModel = (): void => {\n  addStats()\n  initThree();\n  initCamera();\n  initScene();\n  initObject();\n  renderer.clear();\n  animation();\n}\nexport default initModel","start":1679986709321,"end":1679986709321},{"name":"vite:esbuild","result":"import * as THREE from \"three\";\nimport addStats from \"../../utils/stats\";\nlet width = 0, height = 0;\nlet renderer;\nconst initThree = () => {\n  width = document.getElementById(\"canvas-frame\")?.clientWidth || 0;\n  height = document.getElementById(\"canvas-frame\")?.clientHeight || 0;\n  renderer = new THREE.WebGLRenderer({\n    // 开启抗锯齿\n    antialias: true\n  });\n  renderer.setSize(width, height);\n  document.getElementById(\"canvas-frame\")?.appendChild(renderer.domElement);\n  renderer.setClearColor(16777215, 1);\n};\nlet camera;\nconst initCamera = () => {\n  camera = new THREE.PerspectiveCamera(60, width / height, 1, 1e4);\n  camera.position.x = 0;\n  camera.position.y = 0;\n  camera.position.z = 10;\n};\nlet scene;\nconst initScene = () => {\n  scene = new THREE.Scene();\n};\nlet cube;\nconst initObject = () => {\n  const geometry = new THREE.BoxGeometry(1, 1, 1);\n  const material = new THREE.MeshBasicMaterial({ color: 65280 });\n  cube = new THREE.Mesh(geometry, material);\n  scene.add(cube);\n};\nconst animation = () => {\n  cube.rotation.z -= 0.01;\n  renderer.render(scene, camera);\n  requestAnimationFrame(animation);\n};\nconst initModel = () => {\n  addStats();\n  initThree();\n  initCamera();\n  initScene();\n  initObject();\n  renderer.clear();\n  animation();\n};\nexport default initModel;\n","start":1679986709321,"end":1679986709323,"order":"normal"},{"name":"vite:import-analysis","result":"import * as THREE from \"/node_modules/.vite/deps/three.js?v=7025fc9d\";\nimport addStats from \"/utils/stats.ts\";\nlet width = 0, height = 0;\nlet renderer;\nconst initThree = () => {\n  width = document.getElementById(\"canvas-frame\")?.clientWidth || 0;\n  height = document.getElementById(\"canvas-frame\")?.clientHeight || 0;\n  renderer = new THREE.WebGLRenderer({\n    // 开启抗锯齿\n    antialias: true\n  });\n  renderer.setSize(width, height);\n  document.getElementById(\"canvas-frame\")?.appendChild(renderer.domElement);\n  renderer.setClearColor(16777215, 1);\n};\nlet camera;\nconst initCamera = () => {\n  camera = new THREE.PerspectiveCamera(60, width / height, 1, 1e4);\n  camera.position.x = 0;\n  camera.position.y = 0;\n  camera.position.z = 10;\n};\nlet scene;\nconst initScene = () => {\n  scene = new THREE.Scene();\n};\nlet cube;\nconst initObject = () => {\n  const geometry = new THREE.BoxGeometry(1, 1, 1);\n  const material = new THREE.MeshBasicMaterial({ color: 65280 });\n  cube = new THREE.Mesh(geometry, material);\n  scene.add(cube);\n};\nconst animation = () => {\n  cube.rotation.z -= 0.01;\n  renderer.render(scene, camera);\n  requestAnimationFrame(animation);\n};\nconst initModel = () => {\n  addStats();\n  initThree();\n  initCamera();\n  initScene();\n  initObject();\n  renderer.clear();\n  animation();\n};\nexport default initModel;\n","start":1679986709323,"end":1679986709324,"order":"normal"}]}
